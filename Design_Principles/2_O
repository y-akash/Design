O => Open Closed Principle (OCP)


As per the Open Closed Principle
    1. In object-oriented programming, the OCP states that "software entities such as classes, modules, functions, etc. 
       should be open for extension, but closed for modification"
    2. Which means, any new functionality should be implemented by adding new classes, attributes and methods, 
       instead of changing the current ones or existing ones.


Implementation guidelines
    1. The simplest way to apply OCP is to implement the new functionality on new derived (sub) classes that inherit the original class implementation.
    2. Another way is to allow client  to access the original class with an abstract interface, 
    3. So, at any given point of time when there is a requirement change instead of touching the existing functionality 
       itâ€™s always suggested to create new classes and leave the original implementation untouched.



If Not Followed OCP Principle
    1. QA Team need to test the entire follow
            as a developer we need to ensure to communicate the scope of the changes to the Quality Assurance team in advance so that they can gear up for enhanced regression testing along with the feature testing. 
    2. Costly Process for the Organization
            Step 1 above is a costly process to adapt for any organization 
    3. Breaks the Single Responsibility as well
            Not following the Open Closed Principle breaks the SRP since the class or function might end up doing multiple tasks.
    4. Maintenance overheads increase on the classes
            Also, if the changes are implemented on the same class, Maintenance of the class becomes difficult since the code of the class increases by thousands of unorganized lines. 